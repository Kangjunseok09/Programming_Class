# 문자열 연산자
print("안녕" + "하세요") # 문자열 + 문자열

# print("안녕하세요" + 1) >>> error
# 문자열은 문자열끼리 + 연산할 수 있다.

print("안녕하세요" * 3) # 문자열 * 정수는 정수만큼 문자열을 반복해서 출력된다.

# 인덱스
print("안녕하세요"[0])
print("안녕하세요"[1])
print("안녕하세요"[2])
print("안녕하세요"[3])
print("안녕하세요"[4]) 

print("안녕하세요"[1:4]) # 특정범위를 선택할때 [시작:끝] 시작부터 끝-1 까지 출력된다.

print("안녕하세요"[1:]) # 끝 값이 없을때 끝까지 다 출력된다.

print("안녕하세요"[:3]) # 시작 값이 없을때 처음부터 출력된다.

# 문자열의 길이 구하기

print(len("안녕하세요")) # len()함수를 사용

# 숫자
# 숫자의 종류

print(273)
print(52.273)

print(type(52)) # 정수이므로 int
print(type(52.273)) # 실수이므로 float

print(type(0)) 
print(type(0.0)) # 소수점이 있으면 실수이다.

# 변수
# 변수 : 프로그래밍에서 자료의 형태에 따른 적절한 크기의 저장공간
# 저장공간의 크기를 결정하는 것이 변수에 저장될 자료의 형태임.
# 파이썬은 변수를 생성할 때 자료형을 지정하지 않아도 저장되는 저장값에 따라 자동으로 부여됨

num1= 10
type(num1) # int

num2 = 3.14
type(num2) # float

num3 = num1+num2
type(num3) # float

# 변수명 작성 방법
# 1. 첫 번째 문자는 영문자, 한글 또는 '_'로 시작
# 2. 나머지 문자는 영문자, 한글, '_'숫자이어야 하낟.
# 3. 변수명은 대소문자를 구별한다. ex)num1은 Num1과 다르다.
# 4. if, while, else와 같은 예약어는 사용할 수 없다.
# 5. 공백과 하이폰(-)은 사용할 수 없다.
# 6. 여러단어로 이루어진 경우, 가독성을 높이기 위해 이어지는 단어의 첫 번쨰 문자를 대문자로 작성하는것이 좋다.

pi =3.14159265 # 이때 "=" 기호는 '같다'는 의미가 아니라 우변의 값을 좌변에 '넣겠다', '할당하겠다'를 의미
r = 10
print("원주율", "=", pi)
print("반지름", "=", r)
print("원의 둘레", "=", 2 * pi * r)
print("원의 넓이", "=", pi * r ** 2)

num03 = '귄기범'
num14 = '조현우'
temp = 0

temp = num03 # num3을 temp에 저장
num03 = num14 # num3에 num14를 저장
num14 = temp # 아까 저장했던 num3이 있는 temp를 num14에 저장

print(num03)
print(num14)

# 숫자 연산자
# '+' 덧셈 연산자
# '-' 뺄셈 연산자
# '*' 곱셈 연산자
# '/' 나눗셈 연산자

print("5 + 7 =", 5 + 7) # 덧셈
print("5 - 7 =", 5 - 7) # 뺄셈
print("5 * 7 =", 5 * 7) # 곱셈
print("5 / 7 =", 5 / 7) # 나눗셈

print("3 // 2 =', 3//2") # 몫 구하는 나눗셈
print("17 / 5 =", 17 % 5) # 나머지 구하는 나눗셈
print("2 ** 4 =", 2**4) # 제곱을 구하는 곱셈
